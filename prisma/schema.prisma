// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Blog {
  id          Int     @id @default(autoincrement())
  title       String
  slug        String  @unique
  content     Json
  // workspace   String  @default("unicornspaceui")
  isPublished Boolean @default(false)

  Workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId Int?
}

model Workspace {
  id   Int    @id @default(autoincrement())
  name String
  slug String

  blogs  Blog[]
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model User {
  id            String      @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]
  apiKey        String?
  workspaces    Workspace[]

  @@unique([email])
  @@map("user")
}

// model APIkeys {
//   id Int @id @default(autoincrement())
//   workspace 
// }

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
